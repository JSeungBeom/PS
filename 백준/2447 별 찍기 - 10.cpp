/*
재귀적인 패턴으로 별을 찍어 보자.
N이 3의 거듭제곱(3, 9, 27, ...)이라고 할 때, 크기 N의 패턴은 N×N 정사각형 모양이다.

크기 3의 패턴은 가운데에 공백이 있고, 가운데를 제외한 모든 칸에 별이 하나씩 있는 패턴이다.
***
* *
***
N이 3보다 클 경우,
크기 N의 패턴은 공백으로 채워진 가운데의 (N/3)×(N/3) 정사각형을 크기 N/3의 패턴으로 둘러싼 형태이다.
예를 들어 크기 27의 패턴은 예제 출력 1과 같다.
*/

#include <iostream>

char star[7000][7000];

using namespace std;

void pattern(int i, int j,int n) {
	if ((i / n) % 3 == 1 && (j / n) % 3 == 1) {
		cout << ' ';
	} 
	else {
		if (n / 3 == 0) {
			cout << '*';
		}
		else {
		pattern(i, j, n / 3);
		}
	} 
} // 재귀함수

int main() {
	int n;

	cin >> n;
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < n; j++) {
			pattern(i, j, n);
		}
		cout << "\n";
	}

	return 0;
}
/*
n = 3인 경우, 가운데 빈 부분의 좌표는 (1,1)이다.
(1,1), (1,4), (1,7)순으로 비어있으므로 기본적인 조건은 i % 3 == 1 && j % 3 == 1이다.

n = 9인 경우, 가운데 빈 부분의 좌표는 (3,3) (3,4) (3,5) (4,3) (4,4) (4,5) (5,3) (5,4) (5,5)이다.
이를 조건으로 표현하면 (i / 3) % 3 == 1 && (j / 3) % 3 == 1이다.

이런 식으로 재귀적으로 반복하면 별을 완성시킬 수 있다.
*/