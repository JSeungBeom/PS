/*
평소 반상회에 참석하는 것을 좋아하는 주희는 이번 기회에 부녀회장이 되고 싶어
각 층의 사람들을 불러 모아 반상회를 주최하려고 한다.

이 아파트에 거주를 하려면 조건이 있는데,
“a층의 b호에 살려면 자신의 아래(a-1)층의 1호부터 b호까지 사람들의 수의 합만큼
사람들을 데려와 살아야 한다” 는 계약 조항을 꼭 지키고 들어와야 한다.

아파트에 비어있는 집은 없고 모든 거주민들이 이 계약 조건을 지키고 왔다고 가정했을 때,
주어지는 양의 정수 k와 n에 대해 k층에 n호에는 몇 명이 살고 있는지 출력하라.
단, 아파트에는 0층부터 있고 각층에는 1호부터 있으며, 0층의 i호에는 i명이 산다.
*/

#include <iostream>

using namespace std;

int main() {
	int t;

	cin >> t;
	for (int i = 0; i < t; i++) {
		int k;
		int n;
		cin >> k;
		cin >> n;
		int* temp = new int[n]; // 입력받은 호수만큼의 동적 배열을 생성한다
		int* num = new int[n]; // 입력받은 호수만큼의 동적 배열을 생성한다

		for (int i = 0; i < n; i++) {
			temp[i] = i + 1;
		} // 0층의 각 호수마다의 사람 수를 초기화한다

		for (int l = 0; l < k; l++) {
			for (int i = 0; i < n; i++) {
				num[i] = 0;
			} // 계산을 위해 일단 현재 층에 사는 사람들을 0으로 초기화한다
			for (int j = 0; j < n; j++) {
				for (int k = 0; k < j + 1; k++) {
					num[j] += temp[k];
				}
			} // 현재 층의 호수에 사는 사람은, 밑층의 그 호수까지의 사람들의 합이다
			for (int i = 0; i < n; i++) {
				temp[i] = num[i];
			} // 다음 계산에서는 현재 층이 밑층이 되므로, 각 사람수를 temp에 저장한다
		}
		cout << num[n - 1] << endl;
		// 배열은 index가 0부터 시작하므로, n - 1 호수의 사람 수를 출력한다

		delete[]num;
		delete[]temp; // 동적 배열의 메모리를 해제한다
	}

	return 0;
} 